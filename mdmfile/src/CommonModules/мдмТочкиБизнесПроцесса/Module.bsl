
#Область ПрограммныйИнтерфейс

Функция МенеджерТочки(Точка) Экспорт
	
	Возврат Справочники[Точка.Метаданные().Имя];
	
КонецФункции	

Процедура ВыполнитьСобытие(Точка, Событие, Контекст, Отказ) Экспорт
	
	Попытка
	
		ВыполнитьКодСобытия(Точка[Событие], Контекст, Отказ);	
		
	Исключение
		
		ВызватьИсключение ОписаниеОшибкиВыполненияСобытия(Точка, Событие, 
			ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
КонецПроцедуры	

Функция ОписаниеОшибкиВыполненияСобытия(Точка, Событие, ОписаниеОшибки) Экспорт
	
	ШаблонОшибки = "Точка [%1]. Cобытие [%2]. Ошибка: %3";
	
	Возврат СтрШаблон(ШаблонОшибки, Точка, Событие, ОписаниеОшибки);
	
КонецФункции	

Функция СоздатьОбновитьТочки(Менеджер, Точка, Элемент, БизнесПроцесс) Экспорт
	
	Если ЗначениеЗаполнено(Точка) тогда
		Объект = Точка.ПолучитьОбъект();
	Иначе 
		Объект = Менеджер.СоздатьЭлемент();
		Объект.Владелец = БизнесПроцесс;
		Объект.УстановитьНовыйКод();
	КонецЕсли;	
	
	Объект.ПометкаУдаления = Ложь;
	Объект.Наименование = Элемент.Наименование;
	Объект.Имя = Элемент.Имя;
	Объект.ДополнительныеСвойства.Вставить("НеВыполнятьПроверкиЗаполнения");
	Объект.Записать();
	
	Точка = Объект.Ссылка;
	
	Возврат Объект.Ссылка;
	
КонецФункции	

Функция ОбновитьСвязиТочки(Менеджер, Точка, ТаблицаСвязей) Экспорт

	ТочкаОбъект = Точка.ПолучитьОбъект();
	
	Если Менеджер.ЕстьВходы() тогда
		
		ТочкаОбъект.Входы.Очистить();
		
	КонецЕсли;	
	
	Если Менеджер.ЕстьВыходы() тогда
		
		ТочкаОбъект.Выходы.Очистить();
		
	КонецЕсли;	
	
	Для Каждого Связь из ТаблицаСвязей цикл
		
		Если Связь.Начало = Точка.Имя И Менеджер.ЕстьВыходы() тогда
			
			ТекущаяТочка = Справочники.мдмТочкиБизнесПроцесса.ПолучитьПоИмени(Связь.Конец, Точка.Владелец);
			
			Если ЗначениеЗаполнено(ТекущаяТочка) тогда
				НоваяСтрока = ТочкаОбъект.Выходы.Добавить();
				НоваяСтрока.Точка = ТекущаяТочка.Точка;
			КонецЕсли;
			
		ИначеЕсли Связь.Конец = Точка.Имя И Менеджер.ЕстьВходы() тогда	
			
			ТекущаяТочка = Справочники.мдмТочкиБизнесПроцесса.ПолучитьПоИмени(Связь.Начало, Точка.Владелец);
			
			Если ЗначениеЗаполнено(ТекущаяТочка) тогда
				НоваяСтрока = ТочкаОбъект.Входы.Добавить();
				НоваяСтрока.Точка = ТекущаяТочка.Точка;
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	ТочкаОбъект.ДополнительныеСвойства.Вставить("НеВыполнятьПроверкиЗаполнения");
	ТочкаОбъект.Записать();
	
	Возврат Точка;
	
КонецФункции	

Функция ВычислитьУсловие(Знач Отбор, ПроцессОбработкиОбъект) Экспорт
	
	Результат = Ложь;
	
	Если ЗначениеЗаполнено(Отбор) тогда
		
		Объект = ПроцессОбработкиОбъект.ПолучитьДанныеПроцесса();
		
		Если Объект <> Неопределено тогда
		
			МетаданныеОбъекта = мдмКэшируемыеФункции.МетаданныеОбъекта(Объект.СхемаДанных, мдмМетаданные.ВерсияМетаданных());
			
			СхемаКомпоновки = Справочники.мдмОтборы.СоздатьСхемуКомпоновкиДанных(МетаданныеОбъекта.Реквизиты);
			
			ДанныеПроцесса = ДанныеОбъектаДляУсловия(Объект, МетаданныеОбъекта);
			
			Попытка
				Результат = Справочники.мдмОтборы.ПроверитьУсловиеОформления(
					СхемаКомпоновки,
					ДанныеПроцесса,
					мдмОбщегоНазначенияСервер.ДесериализоватьИзXML(Отбор)
				);
			Исключение
				Результат = Ложь;	
			КонецПопытки;
		
		КонецЕсли;
		
	КонецЕсли;		
	
	Возврат Результат;
	
КонецФункции	

Функция ДанныеОбъектаДляУсловия(Объект, МетаданныеОбъекта) Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	
	Для Каждого Реквизит из МетаданныеОбъекта.Реквизиты Цикл 
		СвойстваРеквизита = Реквизит.Значение;
		Таблица.Колонки.Добавить(СвойстваРеквизита.Имя, СвойстваРеквизита.Тип);
	КонецЦикла;	
	
	ЗаполнитьЗначенияСвойств(Таблица.Добавить(), Объект);
	
	Возврат Таблица;
	
КонецФункции	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьКодСобытия(Знач Код, Контекст, Отказ)
	
	Выполнить Код;
	
КонецПроцедуры	

#КонецОбласти
