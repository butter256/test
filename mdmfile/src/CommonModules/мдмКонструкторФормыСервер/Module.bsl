
#Область ПрограммныйИнтерфейс

#Область ЭлементыФормы

Функция ФормаДанных(Объект, ТипОбъекта) Экспорт
	
	Перем Результат;
	
	Если ТипОбъекта = Тип("ЗадачаСсылка.мдмЗадачаОбработки") тогда
		Если Объект.ТочкаБизнесПроцесса <> Неопределено тогда 
			Результат = Объект.ТочкаБизнесПроцесса.ФормаДанных;
			Если Не ЗначениеЗаполнено(Результат) тогда
				Результат = Объект.ТочкаБизнесПроцесса.Владелец.ФормаДанных
			КонецЕсли;	
		КонецЕсли;
	ИначеЕсли ТипОбъекта = Тип("БизнесПроцессСсылка.мдмПроцессОбработки") тогда
		Результат = Объект.БизнесПроцесс.ФормаДанных;
	Иначе 
		ВызватьИсключение "Форма не предусмотрена для типа объекта " + ТипОбъекта;
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции	

Функция СоздатьЭлементФормы(Форма, Имя, Заголовок, Тип, Родитель = Неопределено, ПутьКДанным = Неопределено, Свойства = Неопределено) Экспорт
	
	Перем Элемент;
	
	Если Тип = "ПолеВвода" тогда
		Элемент = СоздатьПолеВвода(Форма, Имя, Заголовок, Родитель, ПутьКДанным, Свойства);	
	ИначеЕсли Тип = "ПолеФлажка" тогда	
		Элемент = СоздатьПолеФлажка(Форма, Имя, Заголовок, Родитель, ПутьКДанным, Свойства);
	ИначеЕсли Тип = "Группа" тогда	
		Элемент = СоздатьГруппу(Форма, Имя, Заголовок, Родитель, Свойства);
	ИначеЕсли Тип = "Страницы" тогда			
		Элемент = СоздатьСтраницы(Форма, Имя, Заголовок, Родитель, Свойства);
	ИначеЕсли Тип = "Страница" тогда	
		Элемент = СоздатьСтраницу(Форма, Имя, Заголовок, Родитель, Свойства);
	ИначеЕсли Тип = "Надпись" тогда	
		Элемент = СоздатьНадпись(Форма, Имя, Заголовок, Родитель, Свойства);;
	ИначеЕсли Тип = "Кнопка" тогда	
		Элемент = СоздатьКнопку(Форма, Имя, Заголовок, Родитель, Свойства);;
	ИначеЕсли Тип = "Таблица" тогда	
		Элемент = СоздатьТаблицу(Форма, Имя, Заголовок, Родитель, ПутьКДанным, Свойства);
	ИначеЕсли Тип = "КоманднаяПанель" тогда	
		Элемент = СоздатьКоманднуюПанель(Форма, Имя, Родитель, Свойства);
	Иначе 
		ВызватьИсключение "Неизвестный тип элемента " + Тип;
	КонецЕсли;	
	
	Возврат Элемент;
		
КонецФункции	

Функция СоздатьПолеВвода(Форма, Имя, Заголовок, Родитель, ПутьКДанным, Свойства) Экспорт
	
	Перем СвязиПараметровВыбора;
	
	Если Форма.ДобавленныеРеквизиты.НайтиПоЗначению(ПутьКДанным) = Неопределено тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	Элемент = Форма.Элементы.Добавить(Имя, Тип("ПолеФормы"), Родитель);
	Элемент.Вид                       = ВидПоляФормы.ПолеВвода;
	Элемент.Заголовок                 = Заголовок;
	Элемент.ПутьКДанным               = ПутьКДанным;
	Элемент.ПоложениеЗаголовка        = ?(Свойства.ОтображатьЗаголовок, ПоложениеЗаголовкаЭлементаФормы.Авто, ПоложениеЗаголовкаЭлементаФормы.Нет);
	Элемент.ТолькоПросмотр            = Свойства.ТолькоПросмотр;
	Элемент.Видимость                 = Свойства.Видимость;
	Элемент.АвтоОтметкаНезаполненного = Свойства.АвтоОтметкаНезаполненного;
	Элемент.Ширина                    = Свойства.Ширина;
	Элемент.Маска                     = Свойства.Маска;
	Элемент.АвтоМаксимальнаяШирина    = Не Свойства.РастягиватьПоГоризонтали;
	Элемент.РастягиватьПоГоризонтали  = Свойства.РастягиватьПоГоризонтали;
	Элемент.РедактированиеТекста      = Свойства.РедактированиеТекста;
	Элемент.РежимВыбораИзСписка       = Свойства.РежимВыбораИзСписка;
	Элемент.МногострочныйРежим        = Свойства.МногострочныйРежим;
	
	Если ЗначениеЗаполнено(Свойства.ПоложениеЗаголовка) тогда 
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы[Свойства.ПоложениеЗаголовка];
	Иначе 
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	КонецЕсли;	
	
	Если Свойства.СписокВыбора.Количество() тогда
		Элемент.СписокВыбора.ЗагрузитьЗначения(Свойства.СписокВыбора.ВыгрузитьЗначения());
	КонецЕсли;
	
	Если Свойства.Свойство("СвязиПараметровВыбора", СвязиПараметровВыбора) И ЗначениеЗаполнено(СвязиПараметровВыбора) тогда
		СвязиПараметровВыбора = мдмКонструкторФормыКлиентСервер.СвязиПараметровВыбора(Свойства.СвязиПараметровВыбора);
		Если СвязиПараметровВыбора <> Неопределено тогда
			Элемент.СвязиПараметровВыбора = СвязиПараметровВыбора;
		КонецЕсли;	
	КонецЕсли;
	
	Если Свойства.КнопкаОчистки <> "Авто" тогда
		Элемент.КнопкаОчистки = ?(Свойства.КнопкаОчистки = "Да", Истина, Ложь);	
	КонецЕсли;	
	
	Если Свойства.КнопкаОткрытия <> "Авто" тогда
		Элемент.КнопкаОткрытия = ?(Свойства.КнопкаОткрытия = "Да", Истина, Ложь);	
	КонецЕсли;	
	
	Если Свойства.КнопкаВыбора <> "Авто" тогда
		Элемент.КнопкаВыбора = ?(Свойства.КнопкаВыбора = "Да", Истина, Ложь);	
	КонецЕсли;	
	
	Элемент.КнопкаСоздания = Ложь;
	
	Если Свойства.ВыборГруппИЭлементов <> "Авто" тогда
		
		Если Свойства.ВыборГруппИЭлементов = "Элементы" тогда
			Элемент.ВыборГруппИЭлементов = ГруппыИЭлементы.Элементы;	
		ИначеЕсли Свойства.ВыборГруппИЭлементов = "Группы" тогда
			Элемент.ВыборГруппИЭлементов = ГруппыИЭлементы.Группы;
		ИначеЕсли Свойства.ВыборГруппИЭлементов = "ГруппыИЭлементы" тогда
			Элемент.ВыборГруппИЭлементов = ГруппыИЭлементы.ГруппыИЭлементы;
		КонецЕсли;	
		
	КонецЕсли;	
	
	УстановитьОбработчикиСобытий(Элемент, Свойства);
	
	Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзменении");	
	
	Возврат Элемент;
	
КонецФункции

Функция СоздатьПолеФлажка(Форма, Имя, Заголовок, Родитель, ПутьКДанным, Свойства) Экспорт
	
	Если Форма.ДобавленныеРеквизиты.НайтиПоЗначению(ПутьКДанным) = Неопределено тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	Элемент = Форма.Элементы.Добавить(Имя, Тип("ПолеФормы"), Родитель);
	Элемент.Вид                = ВидПоляФормы.ПолеФлажка;
	Элемент.Заголовок          = Заголовок;
	Элемент.ПутьКДанным        = ПутьКДанным;
	Элемент.ПоложениеЗаголовка = ?(Свойства.ОтображатьЗаголовок, ПоложениеЗаголовкаЭлементаФормы.Авто, ПоложениеЗаголовкаЭлементаФормы.Нет);
	Элемент.ТолькоПросмотр     = Свойства.ТолькоПросмотр;
	Элемент.Видимость          = Свойства.Видимость;
	
	УстановитьОбработчикиСобытий(Элемент, Свойства);
	
	Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзменении");	
	
	Возврат Элемент;
	
КонецФункции

Функция СоздатьТаблицу(Форма, Имя, Заголовок, Родитель, ПутьКДанным, Свойства) Экспорт
	
	Если Форма.ДобавленныеРеквизиты.НайтиПоЗначению(ПутьКДанным) = Неопределено тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	Элемент = Форма.Элементы.Добавить(Имя, Тип("ТаблицаФормы"), Родитель);
	Элемент.ПутьКДанным               = ПутьКДанным;
	Элемент.ПоложениеЗаголовка        = ?(Свойства.ОтображатьЗаголовок, ПоложениеЗаголовкаЭлементаФормы.Авто, ПоложениеЗаголовкаЭлементаФормы.Нет);
	Элемент.ИзменятьСоставСтрок       = Свойства.ИзменятьСоставСтрок;
	Элемент.ИзменятьПорядокСтрок      = Свойства.ИзменятьПорядокСтрок;
	Элемент.КоманднаяПанель.Видимость = Свойства.ПоказыватьКоманднуюПанель;
	Элемент.Ширина                    = Свойства.Ширина;
	Элемент.АвтоМаксимальнаяШирина    = Не Свойства.РастягиватьПоГоризонтали;
	Элемент.РастягиватьПоГоризонтали  = Свойства.РастягиватьПоГоризонтали;
	
	УстановитьОбработчикиСобытий(Элемент, Свойства);
	
	Возврат Элемент;
	
КонецФункции	

Функция СоздатьГруппу(Форма, Имя, Заголовок, Родитель, Свойства) Экспорт
	
	Элемент = Форма.Элементы.Добавить(Имя, Тип("ГруппаФормы"), Родитель);
	Элемент.Вид                      = ВидГруппыФормы.ОбычнаяГруппа;
	Элемент.Заголовок                = Заголовок;
	Элемент.Группировка              = ГруппировкаПодчиненныхЭлементовФормы[Свойства.Группировка];
	Элемент.РастягиватьПоГоризонтали = Истина;
	Элемент.ОтображатьЗаголовок      = Свойства.ОтображатьЗаголовок;
	Элемент.ТолькоПросмотр           = Свойства.ТолькоПросмотр;
	Элемент.Видимость                = Свойства.Видимость;
	Элемент.Поведение                = ?(Свойства.Свертываемая, ПоведениеОбычнойГруппы.Свертываемая, ПоведениеОбычнойГруппы.Обычное);
	
	Если Элемент.ОтображатьЗаголовок тогда
		Элемент.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	Иначе
		Элемент.Отображение = ОтображениеОбычнойГруппы.Нет;
	КонецЕсли;	
	Если Свойства.Свертываемая тогда
		Элемент.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
	КонецЕсли;	
	
	// Общие свойства
	Элемент.Ширина = Свойства.Ширина;
	Элемент.РастягиватьПоГоризонтали = Свойства.РастягиватьПоГоризонтали;
	
	Возврат Элемент;
	
КонецФункции

Функция СоздатьСтраницы(Форма, Имя, Заголовок, Родитель, Свойства) Экспорт
	
	Элемент = Форма.Элементы.Добавить(Имя, Тип("ГруппаФормы"), Родитель);
	Элемент.Вид                      = ВидГруппыФормы.Страницы;
	Элемент.РастягиватьПоГоризонтали = ИСТИНА;
	Элемент.ОтображениеСтраниц       = ОтображениеСтраницФормы[Свойства.ОтображениеСтраниц];
	Элемент.ТолькоПросмотр           = Свойства.ТолькоПросмотр;
	Элемент.Видимость                = Свойства.Видимость;
	Элемент.Ширина                   = Свойства.Ширина;
	Элемент.РастягиватьПоГоризонтали = Свойства.РастягиватьПоГоризонтали;
	
	УстановитьОбработчикиСобытий(Элемент, Свойства);
	
	Возврат Элемент;
	
КонецФункции

Функция СоздатьСтраницу(Форма, Имя, Заголовок, Родитель, Свойства) Экспорт
	
	Элемент = Форма.Элементы.Добавить(Имя, Тип("ГруппаФормы"), Родитель);
	Элемент.Вид                      = ВидГруппыФормы.Страница;
	Элемент.Заголовок                = Заголовок;
	Элемент.ТолькоПросмотр           = Свойства.ТолькоПросмотр;
	Элемент.Видимость                = Свойства.Видимость;
	Элемент.Ширина                   = Свойства.Ширина;
	Элемент.РастягиватьПоГоризонтали = Свойства.РастягиватьПоГоризонтали;
	
	Возврат Элемент;
	
КонецФункции

Функция СоздатьКоманднуюПанель(Форма, Имя, Родитель, Свойства) Экспорт
	
	Элемент = Форма.Элементы.Добавить(Имя, Тип("ГруппаФормы"), Родитель);
	Элемент.Вид            = ВидГруппыФормы.КоманднаяПанель;
	Элемент.ТолькоПросмотр = Свойства.ТолькоПросмотр;
	Элемент.Видимость      = Свойства.Видимость;
	Элемент.Ширина         = Свойства.Ширина;
	
	Возврат Элемент;
	
КонецФункции

Функция СоздатьНадпись(Форма, Имя, Заголовок, Родитель, Свойства) Экспорт
	
	Элемент = Форма.Элементы.Добавить(Имя, Тип("ДекорацияФормы"), Родитель);
	Элемент.Вид                      = ВидДекорацииФормы.Надпись;
	Элемент.Заголовок                = Заголовок;
	Элемент.Видимость                = Свойства.Видимость;
	Элемент.Ширина                   = Свойства.Ширина;
	Элемент.АвтоМаксимальнаяШирина   = Не Свойства.РастягиватьПоГоризонтали;
	Элемент.РастягиватьПоГоризонтали = Свойства.РастягиватьПоГоризонтали;
	
	Возврат Элемент;
	
КонецФункции

Функция СоздатьКнопку(Форма, Имя, Заголовок, Родитель, Свойства) Экспорт
	
	Если Форма.Команды.Найти(Свойства.ИмяКоманды) = Неопределено тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	Элемент = Форма.Элементы.Добавить(Имя, Тип("КнопкаФормы"), Родитель);
	Элемент.Заголовок   = Заголовок;
	Элемент.ИмяКоманды  = Свойства.ИмяКоманды;
	Элемент.Доступность = Свойства.Доступность;
	Элемент.Видимость   = Свойства.Видимость;
	
	Возврат Элемент;
	
КонецФункции

#КонецОбласти

#Область Реквизиты

Функция ОписаниеТипа(Имя, Квалификатор = Неопределено) Экспорт
	ОписаниеТипа = Неопределено;
	
	Если Имя = "Строка" тогда
		ОписаниеТипа = Новый ОписаниеТипов(Имя,,,, Квалификатор);	
	ИначеЕсли Имя = "Число" тогда	
		ОписаниеТипа = Новый ОписаниеТипов(Имя,,, Квалификатор);
	ИначеЕсли Имя = "Дата" тогда
		ОписаниеТипа = Новый ОписаниеТипов(Имя,,,,, Квалификатор);
	Иначе 
		ОписаниеТипа = Новый ОписаниеТипов(Имя);
	КонецЕсли;	
	
	Возврат ОписаниеТипа
КонецФункции	

Функция ОписаниеТипаДляФормы(Тип) Экспорт
	
	Перем Результат;
	
	Типы = Тип.Типы();
	
	ИндексХранилища = Типы.Найти(Тип("ХранилищеЗначения"));
	
	Если ИндексХранилища <> Неопределено тогда
		
		Типы.Удалить(ИндексХранилища);	
		
		Если Не Типы.Количество() = 0 тогда

			Результат = Новый ОписаниеТипов(Типы, 
				Тип.КвалификаторыЧисла, 
				Тип.КвалификаторыСтроки, 
				Тип.КвалификаторыДаты, 
				Тип.КвалификаторыДвоичныхДанных);
			
		КонецЕсли;	
		
	Иначе 
		
		Результат = Тип;
		
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции	

Процедура ДобавитьРеквизит(Реквизиты, Имя, Тип, Путь = Неопределено, Заголовок = Неопределено, СохраняемыеДанные = Истина) Экспорт
	
	ТипЗначения = ОписаниеТипаДляФормы(Тип);
	
	Если ТипЗначения = Неопределено тогда
		Возврат
	КонецЕсли;	
	
	Реквизиты.Добавить(Новый РеквизитФормы(Имя, ТипЗначения, Путь, Заголовок, СохраняемыеДанные));
	
КонецПроцедуры

Функция УдаляемыеРеквизиты(ДобавляемыеРеквизиты) Экспорт
	
	Результат = Новый Массив;
	
	Для Каждого Реквизит из ДобавляемыеРеквизиты цикл
		Если ЗначениеЗаполнено(Реквизит.Путь) тогда
			Продолжить;
		КонецЕсли;	
		Результат.Добавить( ?(ЗначениеЗаполнено(Реквизит.Путь), Реквизит.Путь + "." + Реквизит.Имя, Реквизит.Имя) );
	КонецЦикла;	
	
	Возврат Результат;
	
КонецФункции	

Функция ДобавленныеРеквизитыФормы(ДобавляемыеРеквизиты) Экспорт
	
	Результат = Новый Массив;
	
	Для Каждого Реквизит из ДобавляемыеРеквизиты цикл
		Результат.Добавить( ?(ЗначениеЗаполнено(Реквизит.Путь), Реквизит.Путь + "." + Реквизит.Имя, Реквизит.Имя) );
	КонецЦикла;	
	
	Возврат Результат;
	
КонецФункции	

#КонецОбласти

Процедура ДобавитьКоманду(Форма, Имя, Заголовок, ИзменяетСохраняемыеДанные) Экспорт
	
	Если Форма.Команды.Найти(Имя) = Неопределено тогда
		НоваяКоманда = Форма.Команды.Добавить(Имя);
		НоваяКоманда.Заголовок = Заголовок;
		НоваяКоманда.ИзменяетСохраняемыеДанные = ИзменяетСохраняемыеДанные;
		НоваяКоманда.Действие = "Подключаемый_ДействиеКоманды";
	КонецЕсли;
	
КонецПроцедуры

Функция СоздатьСвойстваЭлемента(ТипЭлемента) Экспорт
	
	Свойства = ТаблицаСвойств();
	
	Возврат Свойства;
	
КонецФункции	

Функция СтруктураСвойств(ТаблицаСвойств) Экспорт
	
	Свойства = Новый Структура;
	
	Для Каждого Строка из ТаблицаСвойств цикл
		Свойства.Вставить(Строка.Имя, Строка.Значение);
	КонецЦикла;	
	
	Возврат Свойства;
	
КонецФункции	

#КонецОбласти

#Область СлужбеныеПроцедурыИФункции

Процедура УстановитьОбработчикиСобытий(Элемент, Свойства)
	
	Для Каждого Событие из Свойства.События цикл
		Элемент.УстановитьДействие(Событие.Ключ, "Подключаемый_" + Событие.Ключ); 
	КонецЦикла;	
	
КонецПроцедуры	

Функция ТаблицаСвойств()
	
	ТипыЗначенийСвойств = Новый Массив;
	ТипыЗначенийСвойств.Добавить("Строка");
	ТипыЗначенийСвойств.Добавить("Булево");
	ТипыЗначенийСвойств.Добавить("СписокЗначений");
	
	Свойства = Новый ТаблицаЗначений;
	Свойства.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"), "Имя");
	Свойства.Колонки.Добавить("Значение", Новый ОписаниеТипов(ТипыЗначенийСвойств), "Значение");
	Свойства.Колонки.Добавить("Редактируется", Новый ОписаниеТипов("Булево"));
	
	Возврат Свойства;
	
КонецФункции	

#КонецОбласти