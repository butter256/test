
#Область ПрограммныйИнтерфейс

Функция СоздатьОбъект(МетаданныеОбъекта, ЗаполнятьЗначенияЗаполнения = Ложь) Экспорт
	
	Если МетаданныеОбъекта = Неопределено тогда
		
		Возврат Неопределено;
		
	КонецЕсли;	
	
	Результат = Новый Структура;
	
	Результат.Вставить("СхемаДанных", МетаданныеОбъекта.СхемаДанных);
	Результат.Вставить("Ссылка", Справочники.мдмДанныеПроцессовОбщее.ПустаяСсылка());
	
	Для Каждого Реквизит из МетаданныеОбъекта.Реквизиты Цикл 
		
		СвойстваРеквизита = Реквизит.Значение;
		
		Если ЗаполнятьЗначенияЗаполнения тогда
			ЗначениеЗаполнения = СвойстваРеквизита.ЗначениеЗаполнения; 	
		Иначе 
			ЗначениеЗаполнения = Неопределено;	
		КонецЕсли;	
		
		Результат.Вставить(СвойстваРеквизита.Имя, СвойстваРеквизита.Тип.ПривестиЗначение(ЗначениеЗаполнения));
		
	КонецЦикла;	
	
	Для Каждого ТабличнаяЧасть из МетаданныеОбъекта.ТабличныеЧасти Цикл 
		
		Таблица = Новый ТаблицаЗначений;
		
		Для Каждого Реквизит из ТабличнаяЧасть.Значение.Реквизиты Цикл 
			
			СвойстваРеквизита = Реквизит.Значение;
			
			Таблица.Колонки.Добавить(СвойстваРеквизита.Имя, СвойстваРеквизита.Тип, СвойстваРеквизита.Синоним);
			
		КонецЦикла;	
		
		Результат.Вставить(ТабличнаяЧасть.Значение.Имя, Таблица);
		
	КонецЦикла;	
	
	Результат.Вставить("СхемаДанных", МетаданныеОбъекта.СхемаДанных);
	
	Возврат Результат;
	
КонецФункции	

Функция ЗаписатьОбъект(Объект) Экспорт
	
	Если Объект = Неопределено тогда
		
		Возврат Неопределено;
		
	КонецЕсли;	
	
	МетаданныеОбъекта = мдмКэшируемыеФункции.МетаданныеОбъекта(Объект.СхемаДанных, мдмМетаданные.ВерсияМетаданных());
	
	Если МетаданныеОбъекта.ТипХранилища = Перечисления.мдмХранилищеДанных.Расширение тогда
		
		ОбъектБД = ЗаписатьОбъектВХранилищеРасширения(МетаданныеОбъекта, Объект);
		
	Иначе 	
	
		ОбъектБД = ЗаписатьОбъектВУниверсальноеХранилище(МетаданныеОбъекта, Объект);
	
	КонецЕсли;
	
	Возврат ОбъектБД.Ссылка;
	
КонецФункции

Функция ПолучитьОбъект(Ссылка) Экспорт
	
	Перем Результат;
	
	Если Не ЗначениеЗаполнено(Ссылка) тогда
		
		Возврат Неопределено;
		
	КонецЕсли;	
	
	МетаданныеОбъекта = мдмКэшируемыеФункции.МетаданныеОбъекта(Ссылка.СхемаДанных, мдмМетаданные.ВерсияМетаданных());
	
	Если МетаданныеОбъекта.ТипХранилища = Перечисления.мдмХранилищеДанных.Расширение тогда
		
		Результат = ПолучитьОбъектИзХранилищаРасширения(МетаданныеОбъекта, Ссылка);
		
	Иначе 	
	
		Результат = ПолучитьОбъектИзУниверсальногоХранилища(МетаданныеОбъекта, Ссылка);
		
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьЗначениеРеквизита(СтрокаХранилища, Значение)
	
	ТипЗнч = ТипЗнч(Значение);
	
	Если ТипЗнч = Тип("ХранилищеЗначения") тогда 
		
		СтрокаХранилища.Тип = Перечисления.мдмТипДанных.ХранилищеЗначения;
		СтрокаХранилища.Хранилище = Значение;
		
	ИначеЕсли ТипЗнч = Тип("Строка") И СтрДлина(Значение) > 1024 тогда
		
		СтрокаХранилища.Тип = Перечисления.мдмТипДанных.СтрокаНеограниченнойДлины;
		СтрокаХранилища.БольшаяСтрока = Значение;
		
	Иначе 
		
		СтрокаХранилища.Тип = Перечисления.мдмТипДанных.Прочее;
		СтрокаХранилища.Значение = Значение;
		
	КонецЕсли;	
	
КонецПроцедуры	

Функция ПолучитьЗначениеРеквизита(СтрокаХранилища)
	
	Перем ЗначениеХранения;
	
	Если СтрокаХранилища.Тип = Перечисления.мдмТипДанных.Прочее тогда
		
		ЗначениеХранения = СтрокаХранилища.Значение;
		
	ИначеЕсли СтрокаХранилища.Тип = Перечисления.мдмТипДанных.СтрокаНеограниченнойДлины тогда	
		
		ЗначениеХранения = СтрокаХранилища.БольшаяСтрока;
		
	ИначеЕсли СтрокаХранилища.Тип = Перечисления.мдмТипДанных.ХранилищеЗначения тогда	
		
		ЗначениеХранения = СтрокаХранилища.Хранилище;
		
	КонецЕсли;	
	
	Возврат ЗначениеХранения;
	
КонецФункции	

Функция ЗаписатьОбъектВУниверсальноеХранилище(Знач МетаданныеОбъекта, Знач Объект)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) тогда
		
		СсылкаОбъекта = Объект.Ссылка;		
		
		ОбъектБД = Объект.Ссылка.ПолучитьОбъект();
		ОбъектБД.Реквизиты.Очистить();
		ОбъектБД.ТабличныеЧасти.Очистить();
		
	Иначе 
		
		МенеджерХранилища = Справочники[МетаданныеОбъекта.ИмяХранилищаДанных];
		
		СсылкаОбъекта = МенеджерХранилища.ПолучитьСсылку();
		
		ОбъектБД = МенеджерХранилища.СоздатьЭлемент();
		ОбъектБД.УстановитьСсылкуНового(СсылкаОбъекта);
		ОбъектБД.СхемаДанных = Объект.СхемаДанных;
		
	КонецЕсли;	
	
	ОбъектБД.Наименование = Объект[МетаданныеОбъекта.РеквизитПредставления];
	
	Для Каждого Реквизит из МетаданныеОбъекта.Реквизиты Цикл 
		
		СвойстваРеквизита = Реквизит.Значение;
		
		Если СвойстваРеквизита.Имя = "Ссылка" ИЛИ СвойстваРеквизита.Имя = МетаданныеОбъекта.РеквизитПредставления тогда
			Продолжить;
		КонецЕсли;	
		
		НовыйРеквизит = ОбъектБД.Реквизиты.Добавить();
		НовыйРеквизит.Реквизит = Реквизит.Ключ;
		
		ЗаполнитьЗначениеРеквизита(НовыйРеквизит, Объект[СвойстваРеквизита.Имя]); 
		
	КонецЦикла;	
	
	Для Каждого ТабличнаяЧасть из МетаданныеОбъекта.ТабличныеЧасти Цикл 
		
		СвойстваТабличнойЧасти = ТабличнаяЧасть.Значение;
		
		Таблица = Объект[СвойстваТабличнойЧасти.Имя];
		
		Для инд = 0 по Таблица.Количество()-1 цикл
			
			СтрокаТабличнойЧасти = Таблица[инд];
			
			Для Каждого Реквизит из СвойстваТабличнойЧасти.Реквизиты Цикл 
				
				СвойстваРеквизита = Реквизит.Значение;
				
				НоваяСтрокаНабора = ОбъектБД.ТабличныеЧасти.Добавить();
				НоваяСтрокаНабора.ТабличнаяЧасть = ТабличнаяЧасть.Ключ;
				НоваяСтрокаНабора.Номер = (инд + 1);
				НоваяСтрокаНабора.Реквизит = Реквизит.Ключ;
				
				ЗаполнитьЗначениеРеквизита(НоваяСтрокаНабора, СтрокаТабличнойЧасти[СвойстваРеквизита.Имя]); 
				
			КонецЦикла;	
			
		КонецЦикла;	
		
	КонецЦикла;	
	
	Если ОбъектБД.ЭтоНовый() тогда
		ОбъектБД.УстановитьНовыйКод();
	КонецЕсли;	
	
	ОбъектБД.ОбменДанными.Загрузка = Истина;
	ОбъектБД.Записать();
	
	Объект.Ссылка = ОбъектБД.Ссылка;
	Возврат ОбъектБД;

КонецФункции	

Функция ПолучитьОбъектИзУниверсальногоХранилища(Знач МетаданныеОбъекта, Знач Ссылка)
	
	Результат = СоздатьОбъект(МетаданныеОбъекта);
	
	РеквизитыОбъекта = МетаданныеОбъекта.Реквизиты;
	
	Результат.СхемаДанных = Результат.СхемаДанных;
	Результат.Ссылка = Ссылка;
	Если ЗначениеЗаполнено(МетаданныеОбъекта.РеквизитПредставления) тогда
		Результат[МетаданныеОбъекта.РеквизитПредставления] = Ссылка.Наименование;
	КонецЕсли;	
	
	Для Каждого СтрокаРеквизита из Ссылка.Реквизиты цикл
		
		ИмяРеквизита = РеквизитыОбъекта.Получить(СтрокаРеквизита.Реквизит).Имя;		
		
		Результат[ИмяРеквизита] = ПолучитьЗначениеРеквизита(СтрокаРеквизита);
		
	КонецЦикла;	
	
	Для Каждого ТабличнаяЧасть из МетаданныеОбъекта.ТабличныеЧасти Цикл 
		
		СвойстваТабличнойЧасти = ТабличнаяЧасть.Значение;
		
		НайденныеСтроки = Ссылка.ТабличныеЧасти.НайтиСтроки(Новый Структура("ТабличнаяЧасть", ТабличнаяЧасть.Ключ));
		
		НомерСтроки = Неопределено;
		Для Каждого Строка из НайденныеСтроки цикл
			
			Если Строка.Номер <> НомерСтроки тогда
				НоваяСтрока = Результат[СвойстваТабличнойЧасти.Имя].Добавить();
				НомерСтроки = Строка.Номер;
			КонецЕсли;	
			
			ИмяРеквизита = СвойстваТабличнойЧасти.Реквизиты.Получить(Строка.Реквизит).Имя;
			
			НоваяСтрока[ИмяРеквизита] = ПолучитьЗначениеРеквизита(Строка);	
			
		КонецЦикла;
		
	КонецЦикла;

	Возврат Результат;

КонецФункции	

Функция ЗаписатьОбъектВХранилищеРасширения(Знач МетаданныеОбъекта, Знач Объект)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) тогда
		
		СсылкаОбъекта = Объект.Ссылка;		
		
		ОбъектБД = Объект.Ссылка.ПолучитьОбъект();
		
	Иначе 
		
		МенеджерХранилища = Справочники[МетаданныеОбъекта.ИмяХранилищаДанных];
		
		СсылкаОбъекта = МенеджерХранилища.ПолучитьСсылку();
		
		ОбъектБД = МенеджерХранилища.СоздатьЭлемент();
		ОбъектБД.УстановитьСсылкуНового(СсылкаОбъекта);
		ОбъектБД.СхемаДанных = Объект.СхемаДанных;
		
	КонецЕсли;	
	
	ЗаполнитьЗначенияСвойств(ОбъектБД, Объект);
	
	Для Каждого ТабличнаяЧасть из МетаданныеОбъекта.ТабличныеЧасти Цикл 
		
		СвойстваТабличнойЧасти = ТабличнаяЧасть.Значение;
		
		ОбъектБД[СвойстваТабличнойЧасти.Имя].Очистить();
		
		Таблица = Объект[СвойстваТабличнойЧасти.Имя];
		
		Для инд = 0 по Таблица.Количество()-1 цикл
			
			СтрокаТабличнойЧасти = Таблица[инд];
			
			ЗаполнитьЗначенияСвойств(ОбъектБД[СвойстваТабличнойЧасти.Имя].Добавить(), СтрокаТабличнойЧасти);
			
		КонецЦикла;	
		
	КонецЦикла;	
	
	Если ОбъектБД.ЭтоНовый() тогда
		ОбъектБД.УстановитьНовыйКод();
	КонецЕсли;	
	
	ОбъектБД.ОбменДанными.Загрузка = Истина;
	ОбъектБД.Записать();
	
	Объект.Ссылка = ОбъектБД.Ссылка;
	
	Возврат ОбъектБД.Ссылка;
	
КонецФункции	

Функция ПолучитьОбъектИзХранилищаРасширения(Знач МетаданныеОбъекта, Знач Ссылка)
	
	Результат = СоздатьОбъект(МетаданныеОбъекта);
	
	Результат.СхемаДанных = Результат.СхемаДанных;
	Результат.Ссылка = Ссылка;
	
	ТабличныеЧасти = "";
	
	Для Каждого ТабличнаяЧасть из МетаданныеОбъекта.ТабличныеЧасти Цикл 
		
		СвойстваТабличнойЧасти = ТабличнаяЧасть.Значение;
		
		Результат[СвойстваТабличнойЧасти.Имя] = Ссылка[СвойстваТабличнойЧасти.Имя].Выгрузить();
		
		ТабличныеЧасти = ТабличныеЧасти + ?(ЗначениеЗаполнено(ТабличныеЧасти), ",", "") + СвойстваТабличнойЧасти.Имя;
		
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(Результат, Ссылка,, ТабличныеЧасти);	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
