
#Область ПрограммныйИнтерфейс

Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	СформироватьСписок(Форма);		
	
КонецПроцедуры

Процедура СформироватьСписок(Форма, ИмяСписка = "Список") Экспорт
	
	Для Каждого Элемент из Форма.ЭлементДанныхФормы().ПодчиненныеЭлементы цикл
		Форма.Элементы.Удалить(Элемент);	
	КонецЦикла;	
	
	МетаданныеСписка = мдмКэшируемыеФункции.МетаданныеФормыСписка(Форма.БизнесПроцесс, мдмМетаданные.ВерсияМетаданных());
	
	Форма.Список.ТекстЗапроса = ТекстЗапросаСписка(Форма, МетаданныеСписка);
	
	Если ЗначениеЗаполнено(Форма.БизнесПроцесс) тогда
		
		Форма.Список.Параметры.УстановитьЗначениеПараметра("БизнесПроцесс", Форма.БизнесПроцесс)	
		
	КонецЕсли;	
	
	Для Каждого Реквизит из МетаданныеСписка.Реквизиты цикл
		
		Форма.Список.Параметры.УстановитьЗначениеПараметра("Реквизит_" + Реквизит.Имя, Реквизит.Ссылка);
		
		Если Реквизит.Показывать тогда
			
			ИмяЭлемента = ИмяСписка + "Реквизит" + Реквизит.Имя;
			ПутьКДанным = ИмяСписка + ".Реквизит" + Реквизит.Имя;
			Заголовок   = Реквизит.Синоним;
			
			Поле = Форма.Элементы.Добавить(
				ИмяЭлемента,
				Тип("ПолеФормы"), 
				Форма.ЭлементДанныхФормы()
			);
			Поле.Заголовок = Заголовок;
			Поле.ПутьКДанным = ПутьКДанным;
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры	

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция ТекстЗапросаСписка(Форма, МетаданныеСписка)
	
	ШаблонЗапроса = "";
	
	Если СтрЗаканчиваетсяНа(Форма.ИмяФормы, "МоиЗадачи") тогда
		
		ШаблонЗапроса = ТекстЗапросаСпискаМоиЗадачи();
		
	ИначеЕсли СтрНачинаетсяС(Форма.ИмяФормы, "Задача.мдмЗадачаОбработки") тогда
		
		ШаблонЗапроса = ТекстЗапросаСпискаЗадач();	
		
	ИначеЕсли СтрНачинаетсяС(Форма.ИмяФормы, "БизнесПроцесс.мдмПроцессОбработки") тогда	
		
		ШаблонЗапроса = ТекстЗапросаСпискаБизнесПроцессов();
		
	Иначе
		
		Возврат Форма.Список.ТекстЗапроса;
		
	КонецЕсли;
	
	ПоляДанных = "";
	
	ШаблонПоля1 = "%1ВЫРАЗИТЬ(Реквизит%2.Значение КАК %3) КАК Реквизит%2,%4";
	ШаблонПоля2 = "%1Реквизит%2.Значение КАК Реквизит%2,%3";
	
	Соединения = "";
	
	ШаблонСоединения = "%1%1ЛЕВОЕ СОЕДИНЕНИЕ Справочник.%4.Реквизиты КАК Реквизит%2
						|%1%1ПО ПроцессОбработки.Данные = Реквизит%2.Ссылка
						|%1%1%1И (Реквизит%2.Реквизит = &Реквизит_%2)%3";
	
	Для Каждого Реквизит из МетаданныеСписка.Реквизиты цикл
		
		Если Реквизит.Тип.Типы().Количество() = 1 Тогда
			ПоляДанных = ПоляДанных + СтрШаблон(ШаблонПоля1,
				Символы.Таб,
				Реквизит.Имя,
				Реквизит.ТипПредставление,
				Символы.ПС
			);	
		Иначе 
			ПоляДанных = ПоляДанных + СтрШаблон(ШаблонПоля2,
				Символы.Таб,
				Реквизит.Имя,
				Символы.ПС
			);
		КонецЕсли;
		
		Соединения = Соединения + СтрШаблон(ШаблонСоединения,
			Символы.Таб,
			Реквизит.Имя,
			Символы.ПС,
			МетаданныеСписка.ИмяХранилищаДанных
		);
		
	КонецЦикла;	
	
	ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "//Данные", ПоляДанных);
	ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "//Соединения", Соединения);
	
	Если ЗначениеЗаполнено(Форма.БизнесПроцесс) тогда
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "//Условие", "И ПроцессОбработки.БизнесПроцесс = &БизнесПроцесс");
	КонецЕсли;	
	
	Возврат ШаблонЗапроса;
	
КонецФункции	

Функция ТекстЗапросаСпискаМоиЗадачи()
	
	Возврат "ВЫБРАТЬ
	|	ЗадачаЗадачаОбработки.Ссылка КАК Ссылка,
	|	ЗадачаЗадачаОбработки.ПометкаУдаления КАК ПометкаУдаления,
	|	ЗадачаЗадачаОбработки.Номер КАК Номер,
	|	ЗадачаЗадачаОбработки.Дата КАК Дата,
	|	ЗадачаЗадачаОбработки.БизнесПроцесс КАК ПроцессОбработки,
	|	ЗадачаЗадачаОбработки.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ЗадачаЗадачаОбработки.Наименование КАК Наименование,
	|	ЗадачаЗадачаОбработки.Выполнена КАК Выполнена,
	|	ЗадачаЗадачаОбработки.ТочкаБизнесПроцесса КАК ТочкаБизнесПроцесса,
	|	ЗадачаЗадачаОбработки.Исполнитель КАК Исполнитель,
	|	ЗадачаЗадачаОбработки.Роль КАК Роль,
	|	ЗадачаЗадачаОбработки.БизнесПроцесс.БизнесПроцесс КАК БизнесПроцесс,
	|//Данные
	|	ЗадачаЗадачаОбработки.ПрерватьПроцесс КАК ПрерватьПроцесс
	|ИЗ
	|	Задача.мдмЗадачаОбработки КАК ЗадачаЗадачаОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.мдмПроцессОбработки КАК ПроцессОбработки
	|		ПО ЗадачаЗадачаОбработки.БизнесПроцесс = ПроцессОбработки.Ссылка
	|//Соединения		
	|ГДЕ
	|	Истина //Условие
	|	И (ЗадачаЗадачаОбработки.Исполнитель = &ТекущийПользователь
	|			ИЛИ ЗадачаЗадачаОбработки.Роль В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					РолиИсполнителейЗадач.Роль КАК Роль
	|				ИЗ
	|					РегистрСведений.мдмИсполнителиЗадачОбработки КАК РолиИсполнителейЗадач
	|				ГДЕ
	|					РолиИсполнителейЗадач.Исполнитель = &ТекущийПользователь))"
					 
КонецФункции	

Функция ТекстЗапросаСпискаЗадач()
	
	Возврат "ВЫБРАТЬ
	|	ЗадачаЗадачаОбработки.Ссылка КАК Ссылка,
	|	ЗадачаЗадачаОбработки.ПометкаУдаления КАК ПометкаУдаления,
	|	ЗадачаЗадачаОбработки.Номер КАК Номер,
	|	ЗадачаЗадачаОбработки.Дата КАК Дата,
	|	ЗадачаЗадачаОбработки.БизнесПроцесс КАК ПроцессОбработки,
	|	ЗадачаЗадачаОбработки.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ЗадачаЗадачаОбработки.Наименование КАК Наименование,
	|	ЗадачаЗадачаОбработки.Выполнена КАК Выполнена,
	|	ЗадачаЗадачаОбработки.ТочкаБизнесПроцесса КАК ТочкаБизнесПроцесса,
	|	ЗадачаЗадачаОбработки.Роль КАК Роль,
	|	ЗадачаЗадачаОбработки.Исполнитель КАК Исполнитель,
	|	ЗадачаЗадачаОбработки.БизнесПроцесс.БизнесПроцесс КАК БизнесПроцесс,
	|//Данные	
	|	ЗадачаЗадачаОбработки.ПрерватьПроцесс КАК ПрерватьПроцесс
	|ИЗ
	|	Задача.мдмЗадачаОбработки КАК ЗадачаЗадачаОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.мдмПроцессОбработки КАК ПроцессОбработки
	|		ПО ЗадачаЗадачаОбработки.БизнесПроцесс = ПроцессОбработки.Ссылка
	|//Соединения
	|ГДЕ Истина //Условие";	
	
КонецФункции	

Функция ТекстЗапросаСпискаБизнесПроцессов()
	
	Возврат "ВЫБРАТЬ
	|	ПроцессОбработки.Ссылка КАК Ссылка,
	|	ПроцессОбработки.ПометкаУдаления КАК ПометкаУдаления,
	|	ПроцессОбработки.Номер КАК Номер,
	|	ПроцессОбработки.Дата КАК Дата,
	|	ПроцессОбработки.Завершен КАК Завершен,
	|	ПроцессОбработки.ВедущаяЗадача КАК ВедущаяЗадача,
	|	ПроцессОбработки.Стартован КАК Стартован,
	|	ПроцессОбработки.БизнесПроцесс КАК БизнесПроцесс,
	|	ПроцессОбработки.Прерван КАК Прерван,
	|	ПроцессОбработки.Наименование КАК Наименование,
	|	ПроцессОбработки.ОписаниеЗадания КАК ОписаниеЗадания,
	|	ПроцессОбработки.Предмет КАК Предмет,
	|	ПроцессОбработки.Данные КАК Данные,
	|//Данные
	|	ПроцессОбработки.Автор КАК Автор
	|ИЗ
	|	БизнесПроцесс.мдмПроцессОбработки КАК ПроцессОбработки
	|//Соединения
	|ГДЕ Истина //Условие";
	
КонецФункции	

#КонецОбласти