
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция КлючОбъекта() Экспорт
	Возврат "Имя,Владелец";
КонецФункции	

Процедура ПередСозданиемЗадачи(ПроцессОбработкиОбъект, Задача, СтандартнаяОбработка) Экспорт
	
	Отказ = Ложь;
	
	ИмяСобытия = "ПередСозданиемЗадач";
	
	Контекст = Новый Структура;
	Контекст.Вставить("Объект", ПроцессОбработкиОбъект);
	Контекст.Вставить("Задача", Задача);
	Контекст.Вставить("СтандартнаяОбработка", СтандартнаяОбработка);
	
	мдмТочкиБизнесПроцесса.ВыполнитьСобытие(Ссылка, ИмяСобытия, Контекст, Отказ);
	
	Если Отказ тогда
		ВызватьИсключение мдмТочкиБизнесПроцесса.ОписаниеОшибкиВыполненияСобытия(Ссылка, ИмяСобытия, "Не удалось создать задачи по процессу обработки " + ПроцессОбработкиОбъект.Ссылка); 
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПриСозданииЗадачи(ПроцессОбработкиОбъект, Задача) Экспорт
	
	Отказ = Ложь;
	
	ИмяСобытия = "ПриСозданииЗадачи";
	
	Контекст = Новый Структура;
	Контекст.Вставить("Объект", ПроцессОбработкиОбъект);
	Контекст.Вставить("Задача", Задача);
	
	мдмТочкиБизнесПроцесса.ВыполнитьСобытие(Ссылка, ИмяСобытия, Контекст, Отказ);
	
	Если Отказ тогда
		ВызватьИсключение мдмТочкиБизнесПроцесса.ОписаниеОшибкиВыполненияСобытия(Ссылка, ИмяСобытия, "Не удалось создать задачи по процессу обработки " + ПроцессОбработкиОбъект.Ссылка); 
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПередСозданиемБизнесПроцесса(ПроцессОбработкиОбъект, ФормируемыйБизнесПроцесс, СтандартнаяОбработка) Экспорт
	
	Отказ = Ложь;
	
	ИмяСобытия = "ПередСозданиемБизнесПроцесса";
	
	Контекст = Новый Структура;
	Контекст.Вставить("Объект", ПроцессОбработкиОбъект);
	Контекст.Вставить("ФормируемыйБизнесПроцесс", ФормируемыйБизнесПроцесс);
	Контекст.Вставить("СтандартнаяОбработка", СтандартнаяОбработка);
	
	мдмТочкиБизнесПроцесса.ВыполнитьСобытие(Ссылка, ИмяСобытия, Контекст, Отказ);
	
	Если Отказ тогда
		ВызватьИсключение мдмТочкиБизнесПроцесса.ОписаниеОшибкиВыполненияСобытия(Ссылка, ИмяСобытия, "Не удалось создать вложенные бизнес-процессы по процессу обработки " + ПроцессОбработкиОбъект.Ссылка); 
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПриСозданииБизнесПроцесса(ПроцессОбработкиОбъект, ФормируемыйБизнесПроцесс) Экспорт
	
	Отказ = Ложь;
	
	ИмяСобытия = "ПриСозданииБизнесПроцесса";
	
	Контекст = Новый Структура;
	Контекст.Вставить("Объект", ПроцессОбработкиОбъект);
	Контекст.Вставить("ФормируемыйБизнесПроцесс", ФормируемыйБизнесПроцесс);
	
	мдмТочкиБизнесПроцесса.ВыполнитьСобытие(Ссылка, ИмяСобытия, Контекст, Отказ);
	
	Если Отказ тогда
		ВызватьИсключение мдмТочкиБизнесПроцесса.ОписаниеОшибкиВыполненияСобытия(Ссылка, ИмяСобытия, "Не удалось создать вложенные бизнес-процессы по процессу обработки " + ПроцессОбработкиОбъект.Ссылка); 
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПередВыполнением(ПроцессОбработкиОбъект, Задача) Экспорт
	
	Отказ = Ложь;
	
	ИмяСобытия = "ПередВыполнением";
	
	Контекст = Новый Структура;
	Контекст.Вставить("Объект", ПроцессОбработкиОбъект);
	Контекст.Вставить("Задача", Задача);
	
	мдмТочкиБизнесПроцесса.ВыполнитьСобытие(Ссылка, ИмяСобытия, Контекст, Отказ);
	
	Если Отказ тогда
		ВызватьИсключение мдмТочкиБизнесПроцесса.ОписаниеОшибкиВыполненияСобытия(Ссылка, ИмяСобытия, "Не удалось выполнить задачу " + Задача + " по процессу обработки " + ПроцессОбработкиОбъект.Ссылка); 
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПриВыполнении(ПроцессОбработкиОбъект, Задача) Экспорт
	
	Отказ = Ложь;
	
	ИмяСобытия = "ПриВыполнении";
	
	Контекст = Новый Структура;
	Контекст.Вставить("Объект", ПроцессОбработкиОбъект);
	Контекст.Вставить("Задача", Задача);
	
	мдмТочкиБизнесПроцесса.ВыполнитьСобытие(Ссылка, ИмяСобытия, Контекст, Отказ);
	
	Если Отказ тогда
		ВызватьИсключение мдмТочкиБизнесПроцесса.ОписаниеОшибкиВыполненияСобытия(Ссылка, ИмяСобытия, "Не удалось выполнить задачу " + Задача + " по процессу обработки " + ПроцессОбработкиОбъект.Ссылка); 
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПриНачалеРаботыТочки(ПроцессОбработкиОбъект) Экспорт
	
	СтандартнаяОбработка = Истина;
	
	Задача = Неопределено;
	
	ПередСозданиемЗадачи(ПроцессОбработкиОбъект, Задача, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка ИЛИ ТипЗнч(Задача) <> Тип("ЗадачаОбъект.мдмЗадачаОбработки") тогда
		
		Задача = Задачи.мдмЗадачаОбработки.СоздатьЗадачу();
		Задача.Дата = ТекущаяДатаСеанса();
		Задача.УстановитьНовыйНомер();
		Задача.Наименование = Наименование;
		Задача.ТочкаБизнесПроцесса = Ссылка;
		Задача.БизнесПроцесс = ПроцессОбработкиОбъект.Ссылка;
		Задача.Записать();
		
	КонецЕсли;	
	
	ПриСозданииЗадачи(ПроцессОбработкиОбъект, Задача);
	
	СтандартнаяОбработка = Истина;
	
	ФормируемыйБизнесПроцесс = Неопределено;
	
	ПередСозданиемБизнесПроцесса(ПроцессОбработкиОбъект, ФормируемыйБизнесПроцесс, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка ИЛИ ТипЗнч(ФормируемыйБизнесПроцесс) <> Тип("БизнесПроцессОбъект.мдмПроцессОбработки") тогда
		
		ФормируемыйБизнесПроцесс = БизнесПроцессы.мдмПроцессОбработки.СоздатьБизнесПроцесс();
		ФормируемыйБизнесПроцесс.Дата = ТекущаяДатаСеанса();
		ФормируемыйБизнесПроцесс.УстановитьНовыйНомер();
		ФормируемыйБизнесПроцесс.БизнесПроцесс = БизнесПроцесс;
		ФормируемыйБизнесПроцесс.ВедущаяЗадача = Задача.Ссылка;
		
		ФормируемыйБизнесПроцесс.ДополнительныеСвойства.Вставить("Старт");
		ФормируемыйБизнесПроцесс.Записать();
		
	КонецЕсли;	
	
	ПриСозданииБизнесПроцесса(ПроцессОбработкиОбъект, ФормируемыйБизнесПроцесс);
	
КонецПроцедуры	

Процедура ПриЗавершенииРаботыТочки(ПроцессОбработкиОбъект) Экспорт
	
	Для Каждого СтрокаВыходы из Выходы Цикл 
		
		СтрокаВыходы.Точка.ПолучитьОбъект().ПриНачалеРаботыТочки(ПроцессОбработкиОбъект);
		
	КонецЦикла;	
	
КонецПроцедуры	

Функция ПроверитьТочку() Экспорт
	
	Результат = Истина;
	
	Если Входы.Количество() = 0 Тогда
		Результат = Ложь;
		СообщитьОбОшибке("Не заполнены точки входа.");
	КонецЕсли;	
	
	Если Выходы.Количество() = 0 Тогда
		Результат = Ложь;
		СообщитьОбОшибке("Не заполнена точка выхода.");
	ИначеЕсли Выходы.Количество() > 1 Тогда
		Результат = Ложь;
		СообщитьОбОшибке("Может быть только одна точка выхода.");
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(БизнесПроцесс) тогда
		Результат = Ложь;
		СообщитьОбОшибке("Не выбран бизнес-процесс.");
	КонецЕсли;	
	
	Возврат Результат;
		
КонецФункции	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СообщитьОбОшибке(Сообщение)
	
	мдмОбщегоНазначенияКлиентСервер.СообщитьОбОшибке("Точка """ + Ссылка + """. " + Сообщение, Ссылка);
	
КонецПроцедуры	

#КонецОбласти

#Иначе
  ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли