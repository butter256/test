
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция КлючОбъекта() Экспорт
	Возврат "Имя,Владелец";
КонецФункции	

Процедура ПередСозданиемЗадачи(ПроцессОбработкиОбъект, Задача, СтандартнаяОбработка) Экспорт
	
	Отказ = Ложь;
	
	ИмяСобытия = "ПередСозданиемЗадач";
	
	Контекст = Новый Структура;
	Контекст.Вставить("Объект", ПроцессОбработкиОбъект);
	Контекст.Вставить("Задача", Задача);
	Контекст.Вставить("СтандартнаяОбработка", СтандартнаяОбработка);
	
	мдмТочкиБизнесПроцесса.ВыполнитьСобытие(Ссылка, ИмяСобытия, Контекст, Отказ);
	
	Если Не (Контекст.Свойство("СтандартнаяОбработка", СтандартнаяОбработка) И ТипЗнч(СтандартнаяОбработка) = Тип("Булево")) тогда
		СтандартнаяОбработка = Истина;
	КонецЕсли;
	
	Если Отказ тогда
		ВызватьИсключение мдмТочкиБизнесПроцесса.ОписаниеОшибкиВыполненияСобытия(Ссылка, ИмяСобытия, "Не удалось создать задачи по процессу обработки " + ПроцессОбработкиОбъект.Ссылка); 
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПриСозданииЗадачи(ПроцессОбработкиОбъект, Задача) Экспорт
	
	Отказ = Ложь;
	
	ИмяСобытия = "ПриСозданииЗадачи";
	
	Контекст = Новый Структура;
	Контекст.Вставить("Объект", ПроцессОбработкиОбъект);
	Контекст.Вставить("Задача", Задача);
	
	мдмТочкиБизнесПроцесса.ВыполнитьСобытие(Ссылка, ИмяСобытия, Контекст, Отказ);
	
	Если Отказ тогда
		ВызватьИсключение мдмТочкиБизнесПроцесса.ОписаниеОшибкиВыполненияСобытия(Ссылка, ИмяСобытия, "Не удалось создать задачи по процессу обработки " + ПроцессОбработкиОбъект.Ссылка); 
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ОбработкаПроверкиВыполнения(ПроцессОбработкиОбъект, Задача, Результат) Экспорт
	
	УсловиеПроверкиВыполнения = УсловиеВыполнения.Отбор;
	
	Если ЗначениеЗаполнено(УсловиеПроверкиВыполнения) тогда
		
		Результат = мдмТочкиБизнесПроцесса.ВычислитьУсловие(УсловиеПроверкиВыполнения, ПроцессОбработкиОбъект);
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ОбработкаПроверкиВыполнения) тогда

		Отказ = Ложь;
		
		ИмяСобытия = "ОбработкаПроверкиВыполнения";
		
		Контекст = Новый Структура;
		Контекст.Вставить("Объект", ПроцессОбработкиОбъект);
		Контекст.Вставить("Задача", Задача);
		Контекст.Вставить("Результат", Результат);
		
		мдмТочкиБизнесПроцесса.ВыполнитьСобытие(Ссылка, ИмяСобытия, Контекст, Отказ);
		
		Если Не (Контекст.Свойство("Результат", Результат) И ТипЗнч(Результат) = Тип("Булево")) тогда
			Результат = Ложь;
		КонецЕсли;
		
		Если Отказ тогда
			ВызватьИсключение мдмТочкиБизнесПроцесса.ОписаниеОшибкиВыполненияСобытия(Ссылка, ИмяСобытия, "Не удалось создать задачи по процессу обработки " + ПроцессОбработкиОбъект.Ссылка); 
		КонецЕсли;	
	
	КонецЕсли;
	
КонецПроцедуры	

Процедура ПередВыполнением(ПроцессОбработкиОбъект, Задача) Экспорт
	
	Отказ = Ложь;
	
	ИмяСобытия = "ПередВыполнением";
	
	Контекст = Новый Структура;
	Контекст.Вставить("Объект", ПроцессОбработкиОбъект);
	Контекст.Вставить("Задача", Задача);
	
	мдмТочкиБизнесПроцесса.ВыполнитьСобытие(Ссылка, ИмяСобытия, Контекст, Отказ);
	
	Если Отказ тогда
		ВызватьИсключение мдмТочкиБизнесПроцесса.ОписаниеОшибкиВыполненияСобытия(Ссылка, ИмяСобытия, "Не удалось выполнить задачу " + Задача + " по процессу обработки " + ПроцессОбработкиОбъект.Ссылка); 
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПриВыполнении(ПроцессОбработкиОбъект, Задача) Экспорт
	
	Отказ = Ложь;
	
	ИмяСобытия = "ПриВыполнении";
	
	Контекст = Новый Структура;
	Контекст.Вставить("Объект", ПроцессОбработкиОбъект);
	Контекст.Вставить("Задача", Задача);
	
	мдмТочкиБизнесПроцесса.ВыполнитьСобытие(Ссылка, ИмяСобытия, Контекст, Отказ);
	
	Если Отказ тогда
		ВызватьИсключение мдмТочкиБизнесПроцесса.ОписаниеОшибкиВыполненияСобытия(Ссылка, ИмяСобытия, "Не удалось выполнить задачу " + Задача + " по процессу обработки " + ПроцессОбработкиОбъект.Ссылка); 
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПриНачалеРаботыТочки(ПроцессОбработкиОбъект) Экспорт
	
	СтандартнаяОбработка = Истина;
	
	Задача = Неопределено;
	
	ПередСозданиемЗадачи(ПроцессОбработкиОбъект, Задача, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка ИЛИ ТипЗнч(Задача) <> Тип("ЗадачаОбъект.мдмЗадачаОбработки") тогда
		
		Задача = Задачи.мдмЗадачаОбработки.СоздатьЗадачу();
		Задача.Дата = ТекущаяДатаСеанса();
		Задача.УстановитьНовыйНомер();
		Задача.Наименование = Наименование;
		Задача.ТочкаБизнесПроцесса = Ссылка;
		Задача.БизнесПроцесс = ПроцессОбработкиОбъект.Ссылка;
		Задача.Роль = Роль;
		Задача.Исполнитель = Пользователь;
		Задача.Записать();
		
	КонецЕсли;	
	
	ПриСозданииЗадачи(ПроцессОбработкиОбъект, Задача);
	
КонецПроцедуры	

Процедура ПриЗавершенииРаботыТочки(ПроцессОбработкиОбъект) Экспорт
	
	Если ПроцессОбработкиОбъект.Прерван тогда
		
		ТочкаЗавершения = БизнесПроцессы.мдмПроцессОбработки.ТочкаЗавершение(ПроцессОбработкиОбъект.БизнесПроцесс);
		
		ТочкаЗавершения.ПолучитьОбъект().ПриНачалеРаботыТочки(ПроцессОбработкиОбъект);
		
	Иначе 
		
		Для Каждого СтрокаВыходы из Выходы Цикл 
			
			СтрокаВыходы.Точка.ПолучитьОбъект().ПриНачалеРаботыТочки(ПроцессОбработкиОбъект);
			
		КонецЦикла;	
	
	КонецЕсли;
	
КонецПроцедуры	

Функция ПроверитьТочку() Экспорт
	
	Результат = Истина;
	
	Если Входы.Количество() = 0 Тогда
		Результат = Ложь;
		СообщитьОбОшибке("Не заполнены точки входа.");
	КонецЕсли;	
	
	Если Выходы.Количество() = 0 Тогда
		Результат = Ложь;
		СообщитьОбОшибке("Не заполнена точка выхода.");
	ИначеЕсли Выходы.Количество() > 1 Тогда
		Результат = Ложь;
		СообщитьОбОшибке("Может быть только одна точка выхода.");
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(Роль) тогда
		Результат = Ложь;
		СообщитьОбОшибке("Не выбрана роль исполнителя.");
	КонецЕсли;	
	
	Возврат Результат;
		
КонецФункции	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СообщитьОбОшибке(Сообщение)
	
	мдмОбщегоНазначенияКлиентСервер.СообщитьОбОшибке("Точка """ + Ссылка + """. " + Сообщение, Ссылка);
	
КонецПроцедуры	

#КонецОбласти

#Иначе
  ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли